"use strict";
/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.implementsInteractionModelContributor = void 0;
/**
 * Type-guard for the InteractionModelContributor interface.
 *
 * @param arg Object to test
 * @returns true if the argument implements the InteractionModelContributor interface.
 */
function implementsInteractionModelContributor(arg) {
    return typeof arg.getTargetIds === 'function' && typeof arg.updateInteractionModel === 'function';
}
exports.implementsInteractionModelContributor = implementsInteractionModelContributor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW50ZXJhY3Rpb25Nb2RlbENvbnRyaWJ1dG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbnRyb2xzL21peGlucy9JbnRlcmFjdGlvbk1vZGVsQ29udHJpYnV0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7OztHQVdHOzs7QUFvQ0g7Ozs7O0dBS0c7QUFDSCxTQUFnQixxQ0FBcUMsQ0FBQyxHQUFRO0lBQzFELE9BQU8sT0FBTyxHQUFHLENBQUMsWUFBWSxLQUFLLFVBQVUsSUFBSSxPQUFPLEdBQUcsQ0FBQyxzQkFBc0IsS0FBSyxVQUFVLENBQUM7QUFDdEcsQ0FBQztBQUZELHNGQUVDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDE5IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpLlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogQSBjb3B5IG9mIHRoZSBMaWNlbnNlIGlzIGxvY2F0ZWQgYXRcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKiBcbiAqIG9yIGluIHRoZSBcImxpY2Vuc2VcIiBmaWxlIGFjY29tcGFueWluZyB0aGlzIGZpbGUuIFRoaXMgZmlsZSBpcyBkaXN0cmlidXRlZFxuICogb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyXG4gKiBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZ1xuICogcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbnRyb2xJbnRlcmFjdGlvbk1vZGVsR2VuZXJhdG9yIH0gZnJvbSAnLi4vLi4vaW50ZXJhY3Rpb25Nb2RlbEdlbmVyYXRpb24vQ29udHJvbEludGVyYWN0aW9uTW9kZWxHZW5lcmF0b3InO1xuaW1wb3J0IHsgTW9kZWxEYXRhIH0gZnJvbSAnLi4vLi4vaW50ZXJhY3Rpb25Nb2RlbEdlbmVyYXRpb24vTW9kZWxUeXBlcyc7XG4vKipcbiAqIE9wdGlvbmFsIGludGVyZmFjZSBmb3IgQ29udHJvbHMgdGhhdCB3aXNoIHRvIGN1c3RvbWl6ZSBJbnRlcmFjdGlvbiBNb2RlbC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJbnRlcmFjdGlvbk1vZGVsQ29udHJpYnV0b3Ige1xuXG4gICAgLyoqIFxuICAgICAqIFNsb3QgVmFsdWUgSURzIHRoYXQgbXVzdCBhcHBlYXIgaW4gdGhlIEludGVyYWN0aW9uIE1vZGVsIFwiVGFyZ2V0XCIgdHlwZSB0byBhY2Nlc3MgZnVuY3Rpb25hbGl0eSBvZiB0aGUgQ29udHJvbC5cbiAgICAgKlxuICAgICAqIEZyYW1ld29yayBiZWhhdmlvcjpcbiAgICAgKiAqIFRoZSBJbnRlcmFjdGlvbiBNb2RlbCBnZW5lcmF0b3Igd2lsbCBjaGVjayB0aGF0IGFsbCB0aGVzZSBzbG90IHZhbHVlIElEcyBleGlzdCBpbiB0aGUgVGFyZ2V0IFR5cGUuXG4gICAgICovXG4gICAgZ2V0VGFyZ2V0SWRzKCk6IHN0cmluZ1tdO1xuXG4gICAgLyoqXG4gICAgICogVXBkYXRlcyB0aGUgaW50ZXJhY3Rpb24gbW9kZWxcbiAgICAgKiBcbiAgICAgKiBVc2FnZTpcbiAgICAgKiBcbiAgICAgKiBUT0RPOiBpbXByb3ZlIHRoaXMganNEb2NcbiAgICAgKiBBbGwga2luZHMgb2YgQ29udHJvbHMgYXJlIGFsbG93ZWQgdG8gdXBkYXRlIEludGVyYWN0aW9uTW9kZWwgdGhyb3VnaCB0aGlzIGZ1bmN0aW9uIGJ5IHVzaW5nIHRoZSBhZGRlciBmdW5jdGlvbnMgcHJvdmlkZWQgaW4gSU1HZW5lcmF0b3JcbiAgICAgKiBcbiAgICAgKiBGb3IgQ29udHJvbHMgZGVwZW5kIG9uIGNvbnRyb2xJbnRlbnQsIGl0IHdvdWxkIGJlIG11Y2ggZWFzaWVyIHRvIHVwZGF0ZSB0aGUgSU0gYnkgdXNpbmcgdGhlIHV0aWwgZnVuY3Rpb24gXG4gICAgICogJ2FkZENvbnRyb2xJbnRlbnQnIHByb3ZpZGVkIGluIGxpYi9pbnRlcmFjdGlvbk1vZGVsR2VuZXJhdGlvbi9Db250cm9sSW50ZXJhY3Rpb25Nb2RlbEdlbmVyYXRvci4gQXMgdGhlIGNvbnRyb2xJbnRlbnQuZ2VuZXJhdGVJbnRlbnQoKVxuICAgICAqIGNvdWxkIHByb3ZpZGUgdGhlIGludGVudCAvIHNsb3RUeXBlIHNrZWxldG9uLCBhbmQgdGhlIHNhbXBsZSB1dHRlcmFuY2VzIGFuZCBzbG90VHlwZSB2YWx1ZXMgd2lsbCBiZSBwcm92aWRlZCBieSBNb2RlbERhdGEgaW5zdGFuY2VcbiAgICAgKiBcbiAgICAgKiBAcGFyYW0gZ2VuZXJhdG9yIEludGVyYWN0aW9uIE1vZGVsIGdlbmVyYXRvclxuICAgICAqIEBwYXJhbSBsb2NhbGUgVGhlIGxvY2FsZSBjb2RlIEUuRyBlbi1VUywgZGUtREUsIGphLUpQLiBSRWY6IGh0dHBzOi8vZGV2ZWxvcGVyLmFtYXpvbi5jb20vZW4tVVMvZG9jcy9hbGV4YS9jdXN0b20tc2tpbGxzL2RldmVsb3Atc2tpbGxzLWluLW11bHRpcGxlLWxhbmd1YWdlcy5odG1sI2gyLWNvZGUtY2hhbmdlc1xuICAgICAqIEB0aHJvd3Mge0xvY2FsZU5vdFN1cHBvcnRlZEVycm9yfSBUaGlzIGVycm9yIHdpbGwgYmUgdGhyb3cgaWYgdGhlIHN1cHBvcnQgZm9yIGlucHV0IGxvY2FsZSBpcyBub3QgYXZhaWxhYmxlXG4gICAgICovXG4gICAgdXBkYXRlSW50ZXJhY3Rpb25Nb2RlbChnZW5lcmF0b3I6IENvbnRyb2xJbnRlcmFjdGlvbk1vZGVsR2VuZXJhdG9yLCBpbURhdGE6IE1vZGVsRGF0YSk6IHZvaWQ7XG59XG5cbi8qKlxuICogVHlwZS1ndWFyZCBmb3IgdGhlIEludGVyYWN0aW9uTW9kZWxDb250cmlidXRvciBpbnRlcmZhY2UuXG4gKiBcbiAqIEBwYXJhbSBhcmcgT2JqZWN0IHRvIHRlc3QgXG4gKiBAcmV0dXJucyB0cnVlIGlmIHRoZSBhcmd1bWVudCBpbXBsZW1lbnRzIHRoZSBJbnRlcmFjdGlvbk1vZGVsQ29udHJpYnV0b3IgaW50ZXJmYWNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaW1wbGVtZW50c0ludGVyYWN0aW9uTW9kZWxDb250cmlidXRvcihhcmc6IGFueSk6IGFyZyBpcyBJbnRlcmFjdGlvbk1vZGVsQ29udHJpYnV0b3Ige1xuICAgIHJldHVybiB0eXBlb2YgYXJnLmdldFRhcmdldElkcyA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgYXJnLnVwZGF0ZUludGVyYWN0aW9uTW9kZWwgPT09ICdmdW5jdGlvbic7XG59Il19