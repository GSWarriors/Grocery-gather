"use strict";
/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ControlInput = void 0;
/**
 * Defines an expanded input object passed around during processing by Controls
 *
 * Purpose:
 *   * Provides access to the HandlerInput and also conveniences such as simplified access
 *     to the Request object, a turn counter and a map of all controls in the control tree.
 */
class ControlInput {
    constructor(handlerInput, turnNumber, controlMap) {
        this.handlerInput = handlerInput;
        this.request = this.handlerInput.requestEnvelope.request;
        this.turnNumber = turnNumber;
        this.controls = controlMap;
    }
}
exports.ControlInput = ControlInput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udHJvbElucHV0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbnRyb2xzL0NvbnRyb2xJbnB1dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7O0dBV0c7OztBQVNIOzs7Ozs7R0FNRztBQUNILE1BQWEsWUFBWTtJQStCckIsWUFBWSxZQUEwQixFQUFFLFVBQWtCLEVBQUUsVUFBMEM7UUFDbEcsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7UUFDakMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUM7UUFDekQsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUM7SUFDL0IsQ0FBQztDQUNKO0FBckNELG9DQXFDQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxOSBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKS5cbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIEEgY29weSBvZiB0aGUgTGljZW5zZSBpcyBsb2NhdGVkIGF0XG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICogXG4gKiBvciBpbiB0aGUgXCJsaWNlbnNlXCIgZmlsZSBhY2NvbXBhbnlpbmcgdGhpcyBmaWxlLiBUaGlzIGZpbGUgaXMgZGlzdHJpYnV0ZWRcbiAqIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlclxuICogZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmdcbiAqIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBIYW5kbGVySW5wdXQgfSBmcm9tICdhc2stc2RrLWNvcmUnO1xuaW1wb3J0IHsgUmVxdWVzdCB9IGZyb20gJ2Fzay1zZGstbW9kZWwnO1xuaW1wb3J0IF8gZnJvbSBcImxvZGFzaFwiO1xuaW1wb3J0IHsgQ29udHJvbCB9IGZyb20gJy4vQ29udHJvbCc7XG5pbXBvcnQgeyBJQ29udHJvbElucHV0IH0gZnJvbSAnLi9pbnRlcmZhY2VzL0lDb250cm9sSW5wdXQnO1xuaW1wb3J0IHsgSUNvbnRyb2wgfSBmcm9tICcuL2ludGVyZmFjZXMvSUNvbnRyb2wnO1xuXG4vKipcbiAqIERlZmluZXMgYW4gZXhwYW5kZWQgaW5wdXQgb2JqZWN0IHBhc3NlZCBhcm91bmQgZHVyaW5nIHByb2Nlc3NpbmcgYnkgQ29udHJvbHNcbiAqIFxuICogUHVycG9zZTpcbiAqICAgKiBQcm92aWRlcyBhY2Nlc3MgdG8gdGhlIEhhbmRsZXJJbnB1dCBhbmQgYWxzbyBjb252ZW5pZW5jZXMgc3VjaCBhcyBzaW1wbGlmaWVkIGFjY2Vzc1xuICogICAgIHRvIHRoZSBSZXF1ZXN0IG9iamVjdCwgYSB0dXJuIGNvdW50ZXIgYW5kIGEgbWFwIG9mIGFsbCBjb250cm9scyBpbiB0aGUgY29udHJvbCB0cmVlLlxuICovXG5leHBvcnQgY2xhc3MgQ29udHJvbElucHV0IGltcGxlbWVudHMgSUNvbnRyb2xJbnB1dCB7XG4gICAgLyoqXG4gICAgICogVGhlIGlucHV0IGZyb20ge0BsaW5rIEN1c3RvbVNraWxsUmVxdWVzdEhhbmRsZXJ9XG4gICAgICovXG4gICAgcmVhZG9ubHkgaGFuZGxlcklucHV0OiBIYW5kbGVySW5wdXQ7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgcmVxdWVzdCBvYmplY3RcbiAgICAgKiBcbiAgICAgKiBUaGlzIGlzIGEgY29udmVuaWVuY2UgZm9yIGBoYW5kbGVySW5wdXQucmVxdWVzdEVudmVsb3BlLnJlcXVlc3RgLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IHJlcXVlc3Q6IFJlcXVlc3Q7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgbnVtYmVyIG9mIGluY29taW5nIHJlcXVlc3RzIGR1cmluZyB0aGUgdXNlciBzZXNzaW9uXG4gICAgICovXG4gICAgcmVhZG9ubHkgdHVybk51bWJlcjogbnVtYmVyO1xuXG4gICAgLyoqXG4gICAgICogQWxsIHRoZSBjb250cm9scyBvZiB0aGUgY29udHJvbCB0cmVlLCBpbmRleGVkIGJ5IGNvbnRyb2xJRFxuICAgICAqIFxuICAgICAqIFVzYWdlOlxuICAgICAqICAqIFRoaXMgcHJvdmlkZXMgZGlyZWN0IGFjY2VzcyB0byBhbGwgb3RoZXIgY29udHJvbHMgaW4gdGhlIGNvbnRyb2wgdHJlZSB3aGljaFxuICAgICAqICAgIGNhbiBiZSBjb252ZW5pZW50IGZvciBvY2Nhc2lvbmFsIHVzZSBidXQgaXQgaW5jcmVhc2VzIHRoZSBjb3VwbGluZyBvZiBzcGVjaWZpYyBjb250cm9scy5cbiAgICAgKiAgKiBXaGVuIGNvbnRyb2xzIGFyZSBjbG9zZSB0byBvbmUgYW5vdGhlciwgaXQgaXMgcHJlZmVyYWJsZSB0byBoYXZlIHRoZWlyIHBhcmVudHNcbiAgICAgKiAgICBjb29yZGluYXRlIGRhdGEgdHJhbnNmZXIsIGUuZy4gYnkgZ2V0KCkgZnJvbSBvbmUgYW5kIHNldCgpIG9uIHRoZSBvdGhlci5cbiAgICAgKiAgKiBJZiBjb250cm9scyB0aGF0IGFyZSBub3QgY2xvc2UgdG8gb25lIGFub3RoZXIgcm91dGluZWx5IG5lZWQgdG8gc2hhcmUgaW5mb3JtYXRpb25cbiAgICAgKiAgICBpdCB3b3VsZCBiZSBiZXN0IHRvIGNyZWF0ZSBhbiBleHRlcm5hbCBkYXRhc3RvcmUuIENvbnNpZGVyIFJlZHV4IG9yIHNpbWlsYXIgc29sdXRpb25zLlxuICAgICAqLyAgICBcbiAgICByZWFkb25seSBjb250cm9sczogeyBbaW5kZXg6IHN0cmluZ106IElDb250cm9sOyB9O1xuXG4gICAgY29uc3RydWN0b3IoaGFuZGxlcklucHV0OiBIYW5kbGVySW5wdXQsIHR1cm5OdW1iZXI6IG51bWJlciwgY29udHJvbE1hcDogeyBbaW5kZXg6IHN0cmluZ106IElDb250cm9sOyB9KSB7XG4gICAgICAgIHRoaXMuaGFuZGxlcklucHV0ID0gaGFuZGxlcklucHV0O1xuICAgICAgICB0aGlzLnJlcXVlc3QgPSB0aGlzLmhhbmRsZXJJbnB1dC5yZXF1ZXN0RW52ZWxvcGUucmVxdWVzdDtcbiAgICAgICAgdGhpcy50dXJuTnVtYmVyID0gdHVybk51bWJlcjtcbiAgICAgICAgdGhpcy5jb250cm9scyA9IGNvbnRyb2xNYXA7XG4gICAgfVxufSJdfQ==