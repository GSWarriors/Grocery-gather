"use strict";
/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Strings = void 0;
var Strings;
(function (Strings) {
    /**
     * Built-in slot types
     */
    let SlotType;
    (function (SlotType) {
        // TODO: consolidate with AmazonBuiltInSlotType.ts
        SlotType["AmazonDate"] = "AMAZON.DATE";
        SlotType["AmazonTime"] = "AMAZON.TIME";
        SlotType["AmazonOrdinal"] = "AMAZON.Ordinal";
        SlotType["AmazonNumber"] = "AMAZON.NUMBER";
    })(SlotType = Strings.SlotType || (Strings.SlotType = {}));
    /**
     * Built-in feedback slot values
     *
     */
    let Feedback;
    (function (Feedback) {
        Feedback["Affirm"] = "affirm";
        Feedback["Disaffirm"] = "disaffirm";
    })(Feedback = Strings.Feedback || (Strings.Feedback = {}));
    /**
     * Built-in action slot values
     */
    let Action;
    (function (Action) {
        Action["Set"] = "set";
        Action["Change"] = "change";
        Action["Select"] = "select";
        Action["None"] = "none";
    })(Action = Strings.Action || (Strings.Action = {}));
    /**
     * Built-in target slot values
     */
    let Target;
    (function (Target) {
        Target["It"] = "it";
    })(Target = Strings.Target || (Strings.Target = {}));
})(Strings = exports.Strings || (exports.Strings = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RyaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb25zdGFudHMvU3RyaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7O0dBV0c7OztBQUVILElBQWlCLE9BQU8sQ0FzQ3ZCO0FBdENELFdBQWlCLE9BQU87SUFFcEI7O09BRUc7SUFDSCxJQUFZLFFBTVg7SUFORCxXQUFZLFFBQVE7UUFDaEIsa0RBQWtEO1FBQ2xELHNDQUEwQixDQUFBO1FBQzFCLHNDQUEwQixDQUFBO1FBQzFCLDRDQUFnQyxDQUFBO1FBQ2hDLDBDQUE4QixDQUFBO0lBQ2xDLENBQUMsRUFOVyxRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQU1uQjtJQUVEOzs7T0FHRztJQUNILElBQVksUUFHWDtJQUhELFdBQVksUUFBUTtRQUNoQiw2QkFBaUIsQ0FBQTtRQUNqQixtQ0FBdUIsQ0FBQTtJQUMzQixDQUFDLEVBSFcsUUFBUSxHQUFSLGdCQUFRLEtBQVIsZ0JBQVEsUUFHbkI7SUFFRDs7T0FFRztJQUNILElBQVksTUFLWDtJQUxELFdBQVksTUFBTTtRQUNkLHFCQUFXLENBQUE7UUFDWCwyQkFBaUIsQ0FBQTtRQUNqQiwyQkFBaUIsQ0FBQTtRQUNqQix1QkFBYSxDQUFBO0lBQ2pCLENBQUMsRUFMVyxNQUFNLEdBQU4sY0FBTSxLQUFOLGNBQU0sUUFLakI7SUFFRDs7T0FFRztJQUNILElBQVksTUFFWDtJQUZELFdBQVksTUFBTTtRQUNkLG1CQUFTLENBQUE7SUFDYixDQUFDLEVBRlcsTUFBTSxHQUFOLGNBQU0sS0FBTixjQUFNLFFBRWpCO0FBQ0wsQ0FBQyxFQXRDZ0IsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBc0N2QiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxOSBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKS5cbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIEEgY29weSBvZiB0aGUgTGljZW5zZSBpcyBsb2NhdGVkIGF0XG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIG9yIGluIHRoZSBcImxpY2Vuc2VcIiBmaWxlIGFjY29tcGFueWluZyB0aGlzIGZpbGUuIFRoaXMgZmlsZSBpcyBkaXN0cmlidXRlZFxuICogb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyXG4gKiBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZ1xuICogcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmV4cG9ydCBuYW1lc3BhY2UgU3RyaW5ncyB7XG5cbiAgICAvKipcbiAgICAgKiBCdWlsdC1pbiBzbG90IHR5cGVzXG4gICAgICovXG4gICAgZXhwb3J0IGVudW0gU2xvdFR5cGUge1xuICAgICAgICAvLyBUT0RPOiBjb25zb2xpZGF0ZSB3aXRoIEFtYXpvbkJ1aWx0SW5TbG90VHlwZS50c1xuICAgICAgICBBbWF6b25EYXRlID0gXCJBTUFaT04uREFURVwiLFxuICAgICAgICBBbWF6b25UaW1lID0gXCJBTUFaT04uVElNRVwiLFxuICAgICAgICBBbWF6b25PcmRpbmFsID0gXCJBTUFaT04uT3JkaW5hbFwiLFxuICAgICAgICBBbWF6b25OdW1iZXIgPSBcIkFNQVpPTi5OVU1CRVJcIixcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBCdWlsdC1pbiBmZWVkYmFjayBzbG90IHZhbHVlc1xuICAgICAqXG4gICAgICovXG4gICAgZXhwb3J0IGVudW0gRmVlZGJhY2sge1xuICAgICAgICBBZmZpcm0gPSBcImFmZmlybVwiLFxuICAgICAgICBEaXNhZmZpcm0gPSBcImRpc2FmZmlybVwiLFxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEJ1aWx0LWluIGFjdGlvbiBzbG90IHZhbHVlc1xuICAgICAqL1xuICAgIGV4cG9ydCBlbnVtIEFjdGlvbiB7XG4gICAgICAgIFNldCA9ICdzZXQnLFxuICAgICAgICBDaGFuZ2UgPSAnY2hhbmdlJyxcbiAgICAgICAgU2VsZWN0ID0gJ3NlbGVjdCcsXG4gICAgICAgIE5vbmUgPSBcIm5vbmVcIlxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEJ1aWx0LWluIHRhcmdldCBzbG90IHZhbHVlc1xuICAgICAqL1xuICAgIGV4cG9ydCBlbnVtIFRhcmdldCB7XG4gICAgICAgIEl0ID0gJ2l0J1xuICAgIH1cbn1cbiJdfQ==