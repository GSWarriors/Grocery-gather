import { v1 } from 'ask-smapi-model';
import InteractionModelData = v1.skill.interactionModel.InteractionModelData;
import SlotType = v1.skill.interactionModel.SlotType;
import TypeValue = v1.skill.interactionModel.TypeValue;
import Intent = v1.skill.interactionModel.Intent;
import DialogIntent = v1.skill.interactionModel.DialogIntents;
import DelegationStrategyType = v1.skill.interactionModel.DelegationStrategyType;
import Prompt = v1.skill.interactionModel.Prompt;
export declare class InteractionModelGenerator {
    protected intents: Intent[];
    protected slotTypes: SlotType[];
    protected dialogIntents: DialogIntent[];
    protected delegationStrategy: DelegationStrategyType;
    protected prompts: Prompt[];
    protected invocationName: string;
    addIntent(intent: Intent): InteractionModelGenerator;
    addIntents(...intents: Intent[]): this;
    addOrMergeSlotType(slotType: SlotType): this;
    addOrMergeSlotTypes(...slotTypes: SlotType[]): this;
    addValuesToSlotType(slotName: string, ...values: TypeValue[]): this;
    addDialogIntent(dialogIntent: DialogIntent): this;
    addDialogIntents(...dialogIntents: DialogIntent[]): this;
    addDelegationStrategy(delegationStrategy: DelegationStrategyType): this;
    addPrompt(prompt: Prompt): this;
    addPrompts(...prompts: Prompt[]): this;
    withInvocationName(name: string): this;
    loadFromFile(inputPath: string): this;
    build(): InteractionModelData;
    buildAndWrite(fileName: string): void;
}
//# sourceMappingURL=InteractionModelGenerator.d.ts.map