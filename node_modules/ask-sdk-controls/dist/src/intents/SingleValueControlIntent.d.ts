import { Intent } from "ask-sdk-model";
import { v1 } from 'ask-smapi-model';
import { BaseControlIntent } from './BaseControlIntent';
import SlotType = v1.skill.interactionModel.SlotType;
/**
 * Intent shape to provide a single value of an arbitrary slot type
 *
 * Usage:
 *  * the value should be provided as a property with name = <SlotType>
 *    e.g. { 'AMAZON.NUMBER': '2' }
 *     or  { 'AMAZON.Ordinal': 'first' }
 */
export interface SingleValueControlIntentSlots {
    feedback?: string;
    action?: string;
    target?: string;
    [key: string]: string | undefined;
}
export interface SingleValuePayload {
    feedback?: string;
    action?: string;
    target?: string;
    valueStr: string;
    valueType?: string;
    erMatch?: boolean;
}
export declare function unpackSingleValueControlIntent(intent: Intent): SingleValuePayload;
/**
 * Intent to capture a value from a specified SlotType, following the "ControlIntent" conventions
 */
export declare class SingleValueControlIntent extends BaseControlIntent {
    valueSlotType: string;
    constructor(valueSlotType: string);
    /**
     * Generate the intent name for a SingleValueControlIntent with value-slot of type slotType
     * @param slotTypeId
     */
    static intentName(slotType: string): string;
    /**
     * Create Intent from specification of the slots
     *
     * Usage:
     *  * the value should be provided as a property with name = <SlotType>
     *    Example single-value-control-intent for certain slotTypes:
     *    * AMAZON.NUMBER:
     *  ```
     *   {
     *      name: AMAZON_NUMBER_ValueControlIntent
     *      slots: { target: 'count', 'AMAZON.NUMBER': '2' }
     *      confirmationStatus: 'NONE'
     *   }
     *  ```
     *    * AMAZON.Ordinal:
     * ```
     *   {
     *        name: AMAZON_ORDINAL_ValueControlIntent
     *      slots: { action: 'set', 'AMAZON.Ordinal': 'first'}
     *           confirmationStatus: 'NONE'
     *   }
     * ```
     */
    static of(slotType: string, slots: SingleValueControlIntentSlots): Intent;
    generateIntent(): v1.skill.interactionModel.Intent;
    generateSlots(): v1.skill.interactionModel.SlotDefinition[];
    generateSlotTypes(): SlotType[];
}
//# sourceMappingURL=SingleValueControlIntent.d.ts.map